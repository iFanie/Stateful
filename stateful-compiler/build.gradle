apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'

sourceCompatibility = stateful.dependencies.JAVA
targetCompatibility = stateful.dependencies.JAVA

publishing {
    publications {
        bar(MavenPublication) {
            groupId stateful.GROUP_ID
            artifactId "stateful-compiler"
            version stateful.VERSION
            artifact("$buildDir/libs/stateful-compiler.jar")

            pom.withXml {
                final dependenciesNode = asNode().appendNode('dependencies')

                ext.addDependency = { Dependency dep, String scope ->
                    if (dep.group == null || dep.version == null || dep.name == null || dep.name == "unspecified") return

                    final dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', dep.group)
                    dependencyNode.appendNode('artifactId', dep.name)
                    dependencyNode.appendNode('version', dep.version)
                    dependencyNode.appendNode('scope', scope)
                    if (!dep.transitive) {
                        final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
                        exclusionNode.appendNode('groupId', '*')
                        exclusionNode.appendNode('artifactId', '*')
                    } else if (!dep.properties.excludeRules.empty) {
                        final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
                        dep.properties.excludeRules.each { ExcludeRule rule ->
                            exclusionNode.appendNode('groupId', rule.group ?: '*')
                            exclusionNode.appendNode('artifactId', rule.module ?: '*')
                        }
                    }
                }

                configurations.compile.getDependencies().each { dep -> addDependency(dep, "compile") }
                configurations.api.getDependencies().each { dep -> addDependency(dep, "compile") }
                configurations.implementation.getDependencies().each { dep ->
                    if (dep.version != null && dep.version != "unspecified") {
                        addDependency(dep, "runtime")
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/iFanie/Stateful")
            credentials {
                username = stateful.github.ID
                password = stateful.github.KEY
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${stateful.dependencies.KOTLIN}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${stateful.dependencies.KOTLIN}"
    implementation "dev.fanie:ktap:${stateful.dependencies.KTAP}"
    implementation project(":stateful")
    testImplementation "junit:junit:${stateful.dependencies.JUNIT}"
}

tasks.register("updatePackage") {
    dependsOn ":stateful-compiler:build", ":stateful-compiler:publish"
    tasks.findByPath(":stateful-compiler:publish").mustRunAfter ":stateful-compiler:build"
}
